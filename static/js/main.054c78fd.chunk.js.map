{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss","components/Section/Section.module.scss","components/Loader/Loader.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","App.module.scss","components/Section/Section.js","redux/app/contactSlice.js","components/Loader/Loader.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","redux/app/app-selectors.js","components/ContactList/ContactList.js","redux/app/app-actions.js","components/Filter/Filter.js","App.js","redux/app/app-reducer.js","redux/store.js","index.js"],"names":["module","exports","Section","children","className","s","section","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","contactName","contactPhone","body","name","phone","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","Loaders","loaderStyle","type","color","height","width","timeout","Component","Form","onSubmit","useState","setName","number","setNumber","handleChange","event","target","value","contacts","data","isLoading","formContact","e","preventDefault","filter","toLowerCase","includes","map","obj","toast","error","currentTarget","elements","success","contactFormItem","onChange","pattern","title","required","formButton","disabled","ContactItem","id","contactItem","contactItemText","contactItemTextB","onClick","getFilter","state","ContactList","useSelector","getVcontacts","console","log","contactList","phonebookActions","changeFilter","createAction","Filter","dispatch","useDispatch","filterBox","actions","Phonebook","box","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","appReducer","devTools","process","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.054c78fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactForm_formContact__36cum\",\"contactFormItem\":\"ContactForm_contactFormItem__2PTB9\",\"formButton\":\"ContactForm_formButton__1YVUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__2NBBw\",\"contactItemText\":\"ContactItem_contactItemText__2w8MQ\",\"contactItemTextB\":\"ContactItem_contactItemTextB__20Xmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__IFLm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderStyle\":\"Loader_loaderStyle__3EupY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3RHl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBox\":\"Filter_filterBox__237Zi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__1BNjq\"};","import s from \"../Section/Section.module.scss\";\nexport default function Section({ children }) {\n  return <div className={s.section}>{children}</div>;\n}\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactApi = createApi({\n  reducerPath: \"contactApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://61905862f6bf450017484bda.mockapi.io/\",\n  }),\n  tagTypes: [\"Contact\"],\n  endpoints: (builder) => ({\n    fetchContacts: builder.query({\n      query: () => \"/contacts\",\n      providesTags: [\"Contact\"],\n    }),\n    deleteContact: builder.mutation({\n      query: (contactId) => ({\n        url: `/contacts/${contactId}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"Contact\"],\n    }),\n    createContact: builder.mutation({\n      query: (contactName, contactPhone) => ({\n        url: \"/contacts\",\n        method: \"POST\",\n        body: {\n          name: contactName,\n          phone: contactPhone,\n        },\n      }),\n      invalidatesTags: [\"Contact\"],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation,\n} = contactApi;\n","import Loader from \"react-loader-spinner\";\nimport React, { Component } from \"react\";\nimport s from \"./Loader.module.scss\";\nexport default class Loaders extends Component {\n  //other logic\n  render() {\n    return (\n      <div className={s.loaderStyle}>\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#00BFFF\"\n          height={18}\n          width={50}\n          timeout={2000} //2 secs\n        />\n      </div>\n    );\n  }\n}\n","import { useState } from \"react\";\nimport s from \"./ContactForm.module.scss\";\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from \"../../redux/app/contactSlice\";\nimport Loader from \"../Loader/Loader\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const { data: contacts } = useFetchContactsQuery();\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const value = name;\n    if (contacts) {\n      const getVcontacts = contacts.filter(({ name }) =>\n        name.toLowerCase().includes(value.toLowerCase())\n      );\n      const existName = getVcontacts.map((obj) => obj.name);\n      if (existName.includes(value)) {\n        toast.error(`${value} is already in contacts`);\n      } else {\n        createContact(e.currentTarget.elements.name.value);\n        toast.success(`${value} was added`);\n      }\n    }\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.formContact} onSubmit={handleSubmit}>\n      <label className={s.contactFormItem}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <br />\n      <label className={s.contactFormItem}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <Toaster />\n      <button className={s.formButton} type=\"submit\" disabled={isLoading}>\n        {isLoading ? <Loader /> : \"Add contact\"}\n      </button>\n    </form>\n  );\n}\n","import s from \"./ContactItem.module.scss\";\nimport PropTypes from \"prop-types\";\nimport { useDeleteContactMutation } from \"../../redux/app/contactSlice\";\nimport Loader from \"../Loader/Loader\";\n\nexport default function ContactItem({ id, name, phone }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactItemText}>{name}</p>\n      <p className={s.contactItemText}>{phone}</p>\n      <button\n        type=\"button\"\n        disabled={isLoading}\n        className={s.contactItemTextB}\n        onClick={() => deleteContact(id)}\n      >\n        {isLoading ? <Loader /> : \"Delete\"}\n      </button>\n    </div>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","export const getFilter = (state) => state.contacts.filter;\n","import s from \"./ContactList.module.scss\";\nimport ContactItem from \"../ContactItem\";\n// import { useSelector } from \"react-redux\";\n// import { GetVisibleContacts } from \"../../redux/app/app-selectors\";\nimport { useFetchContactsQuery } from \"../../redux/app/contactSlice\";\nimport { getFilter } from \"../../redux/app/app-selectors\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ContactList() {\n  const { data: contacts } = useFetchContactsQuery();\n  const value = useSelector(getFilter);\n\n  const getVcontacts =\n    contacts &&\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(value.toLowerCase())\n    );\n\n  // const vcontacts = useSelector(GetVisibleContacts);\n  console.log(contacts);\n  return (\n    <ul className={s.contactList}>\n      {contacts &&\n        getVcontacts.map(({ id, name, phone }) => (\n          <li key={id}>\n            <ContactItem id={id} name={name} phone={phone} />\n          </li>\n        ))}\n    </ul>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst changeFilter = createAction(\"phonebook/changeFilter\");\n\nconst phonebookActions = { changeFilter };\nexport default phonebookActions;\n\n// const addContact = ({ name, number }) => ({\n//   type: types.ADD,\n//   payload: {\n\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     },\n\n// });\n\n// const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\n// export default { addContact, deleteContact, changeFilter };\n","import React from \"react\";\nimport s from \"./Filter.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport actions from \"../../redux/app/app-actions\";\nimport { getFilter } from \"../../redux/app/app-selectors\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  return (\n    <label className={s.filterBox}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => dispatch(actions.changeFilter(e.currentTarget.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// import { useState, useEffect } from \"react\";\n// import shortid from \"shortid\";\n// import contactsObj from \"./contacts.json\";\n\nimport Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport s from \"./App.module.scss\";\n\nexport default function Phonebook() {\n  return (\n    <Section>\n      <div className={s.box}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Section>\n  );\n}\n\n// const [contacts, setContacts] = useState(contactsObj);\n// const [filter, setFilter] = useState(\"\");\n\n// useEffect(() => {\n//   const contacts = window.localStorage.getItem(\"contacts\");\n//   const parsedContacts = JSON.parse(contacts);\n//   if (parsedContacts) {\n//     setContacts(parsedContacts);\n//   }\n// }, []);\n\n// useEffect(() => {\n//   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n// }, [contacts]);\n\n// const addContact = ({ name, number }) => {\n//   const contact = {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   };\n//   const nameArr = getVisibleContacts();\n//   const existName = nameArr.map((obj) => obj.name);\n//   if (existName.includes(name)) {\n//     alert(`${name} is already in contacts`);\n//   } else {\n//     setContacts([...contacts, contact]);\n//   }\n// };\n\n// const getVisibleContacts = () => {\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\n// const deleteContact = (contactId) => {\n//   setContacts(contacts.filter((contact) => contact.id !== contactId));\n// };\n\n// const changeFilter = (e) => {\n//   setFilter(e.currentTarget.value);\n// };\n\n//   return (\n//     <Section>\n//       <div className={s.box}>\n//         <h1>Phonebook</h1>\n//         <ContactForm onSubmit={addContact} />\n\n//         <h2>Contacts</h2>\n//         <Filter value={filter} onChange={changeFilter} />\n//         <ContactList\n//           contacts={getVisibleContacts()}\n//           onDeleteContact={deleteContact}\n//         />\n//       </div>\n//     </Section>\n//   );\n// }\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./app-actions\";\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  filter,\n});\n\n// import { combineReducers } from 'redux';\n// import types from './app-selectors';\n// import contactsObj from \"./contacts.json\";\n\n// const contacts = (state = contactsObj, { type, payload }) => {\n//   switch (type) {\n//       case types.ADD:\n\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   contacts,\n//   filter,\n// });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport appReducer from \"./app/app-reducer\";\nimport { contactApi } from \"./app/contactSlice\";\nimport logger from \"redux-logger\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  contactApi.middleware,\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: appReducer,\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nsetupListeners(store.dispatch);\n\n// import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import appReducer from \"./app/app-reducer\";\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   logger,\n// ];\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// export const store = configureStore({\n//   reducer: {\n//     contacts: persistReducer(contactsPersistConfig, appReducer),\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n// export const persistor = persistStore(store);\n\n// import { createStore, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import counterReducer from './counter/counter-reducer';\n// import appReducer from './app/app-reducer';\n\n// const rootReducer = combineReducers({\n//   counter: counterReducer,\n//   Phonebook: appReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}